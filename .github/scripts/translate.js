/**
 * Auto Translate Script for GitHub Issues and PRs
 * gomoqt OSS multilingual support — powered by LibreTranslate
 */
import { Octokit } from "@octokit/core";
import fetch from "node-fetch";

const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

const event = JSON.parse(process.env.GITHUB_EVENT || "{}");
const repo = process.env.GITHUB_REPOSITORY;
const [owner, repoName] = repo.split("/");

const issue = event.issue || event.pull_request;
if (!issue) {
  console.log("No issue or pull_request found.");
  process.exit(0);
}

const text = issue.body?.trim();
if (!text) {
  console.log("No body text to translate.");
  process.exit(0);
}

// 対応言語リスト
const languages = [
  { code: "en", flag: "🇬🇧", name: "English" },
  { code: "ja", flag: "🇯🇵", name: "Japanese" },
  { code: "zh", flag: "🇨🇳", name: "Chinese (Simplified)" },
  { code: "ko", flag: "🇰🇷", name: "Korean" },
  { code: "fr", flag: "🇫🇷", name: "French" },
  { code: "es", flag: "🇪🇸", name: "Spanish" },
  { code: "de", flag: "🇩🇪", name: "German" },
  { code: "ru", flag: "🇷🇺", name: "Russian" },
  { code: "pt", flag: "🇵🇹", name: "Portuguese" },
  { code: "ar", flag: "🇸🇦", name: "Arabic" },
];

const translate = async (text, target) => {
  const res = await fetch("https://libretranslate.com/translate", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      q: text,
      source: "auto",
      target,
    }),
  });
  if (!res.ok) throw new Error("Translation failed");
  const data = await res.json();
  return data.translatedText;
};

(async () => {
  let comment = "### 🌍 Translations (Automated for Global Collaboration)\n\n";

  for (const lang of languages) {
    try {
      const translated = await translate(text, lang.code);
      comment += `<details><summary>${lang.flag} ${lang.name}</summary>\n\n> ${translated}\n\n</details>\n\n`;
    } catch (err) {
      console.warn(`❌ Failed to translate to ${lang.code}:`, err.message);
    }
  }

  comment +=
    "\n---\n🤖 *Auto-generated by Translation Bot (LibreTranslate) — feel free to improve these translations via PRs!*";

  await octokit.request("POST /repos/{owner}/{repo}/issues/{issue_number}/comments", {
    owner,
    repo: repoName,
    issue_number: issue.number,
    body: comment,
  });

  console.log("✅ Translation comment posted successfully.");
})();
