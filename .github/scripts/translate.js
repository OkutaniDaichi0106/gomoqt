/**
 * Auto Translate Script for GitHub Issues and PRs
 * gomoqt OSS multilingual support — powered by LibreTranslate
 *
 * This script automatically translates issue/PR bodies into multiple languages
 * and posts them as a comment for better global collaboration.
 *
 * Requirements:
 * - Node.js 20+
 * - Dependencies: @octokit/core, node-fetch
 * - Environment variables: GITHUB_TOKEN, GITHUB_EVENT, GITHUB_REPOSITORY
 */
import { Octokit } from "@octokit/core";
import fetch from "node-fetch";

// Check required environment variables
if (!process.env.GITHUB_TOKEN) {
  console.error("❌ GITHUB_TOKEN is required");
  process.exit(1);
}

if (!process.env.GITHUB_REPOSITORY) {
  console.error("❌ GITHUB_REPOSITORY is required");
  process.exit(1);
}

const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

const event = JSON.parse(process.env.GITHUB_EVENT || "{}");
const repo = process.env.GITHUB_REPOSITORY;
const [owner, repoName] = repo.split("/");

const issue = event.issue || event.pull_request;
if (!issue) {
  console.log("ℹ️ No issue or pull_request found in the event.");
  process.exit(0);
}

const text = issue.body?.trim();
if (!text) {
  console.log("ℹ️ No body text to translate.");
  process.exit(0);
}

// Supported languages list
const languages = [
  { code: "en", flag: "🇬🇧", name: "English" },
  { code: "ja", flag: "🇯🇵", name: "Japanese" },
  { code: "zh", flag: "🇨🇳", name: "Chinese (Simplified)" },
  { code: "ko", flag: "🇰🇷", name: "Korean" },
  { code: "fr", flag: "🇫🇷", name: "French" },
  { code: "es", flag: "🇪🇸", name: "Spanish" },
  { code: "de", flag: "🇩🇪", name: "German" },
  { code: "ru", flag: "🇷🇺", name: "Russian" },
  { code: "pt", flag: "🇵🇹", name: "Portuguese" },
  { code: "ar", flag: "🇸🇦", name: "Arabic" },
];

const translate = async (text, target) => {
  const res = await fetch("https://libretranslate.com/translate", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      q: text,
      source: "auto",
      target,
    }),
  });
  if (!res.ok) {
    const errorText = await res.text();
    throw new Error(`Translation API failed: ${res.status} ${errorText}`);
  }
  const data = await res.json();
  return data.translatedText;
};

(async () => {
  try {
    console.log("🚀 Starting translation process...");

    let comment = "### 🌍 Translations (Automated for Global Collaboration)\n\n";

    for (const lang of languages) {
      try {
        console.log(`📝 Translating to ${lang.name} (${lang.code})...`);
        const translated = await translate(text, lang.code);
        comment += `<details><summary>${lang.flag} ${lang.name}</summary>\n\n> ${translated}\n\n</details>\n\n`;
      } catch (err) {
        console.warn(`❌ Failed to translate to ${lang.code}:`, err.message);
        // Continue with other languages even if one fails
      }
    }

    comment +=
      "\n---\n🤖 *Auto-generated by Translation Bot (LibreTranslate) — feel free to improve these translations via PRs!*";

    console.log("📤 Posting translation comment...");
    await octokit.request("POST /repos/{owner}/{repo}/issues/{issue_number}/comments", {
      owner,
      repo: repoName,
      issue_number: issue.number,
      body: comment,
    });

    console.log("✅ Translation comment posted successfully.");
  } catch (error) {
    console.error("❌ Unexpected error:", error);
    process.exit(1);
  }
})();
